{% extends 'base.html.twig' %}

{% form_theme form 'bootstrap_5_layout.html.twig' %}

{% block title %} {{ form_name }} {% endblock %}

{% block body %}
    <h2>{{ form_name }}</h2>
    <div class="row">
        <div id="notes-box" class="col-md-4 mb-4 px-5">
        </div>
        <div class="col-md-8">
            {{ form(form) }}
        </div>
    </div>
    <script>
    async function getUnits(date) {
        let url = `{{ path('api_get_unitary_3days', { date: 'today' }) }}`;
        url = url.replace('today', date);
        const res = await fetch(url, {
                headers: {
                    "Content-Type": "application/json;charset=utf-8",
                    "Accept": "application/json"
                },
            });
        const retjson = await res.json();
        return retjson;
    };

    async function displayCompactNotes(date) {
        const notesBoxEle = document.getElementById("notes-box");
        const units = await getUnits(date);

        units["units"].forEach((unit) => {
            let titleHtml = `<div class="unitary-date text-center">%%dateWithYoubi%%`
                        +`[<a class="btn btn-link btn-sm" href="{{ path('new_unitary_with_compact', { date: 'today' }) }}">`
                        +`    追加W`
                        +`</a>`
                        +`<a class="btn btn-link btn-sm" href="{{ path('app_unitary_date', { date: 'today' }) }}">`
                        +`    見る`
                        +`</a>`
                        +`]`
                    + `</div>`;
            titleHtml = titleHtml.replaceAll("%%dateWithYoubi%%", unit.dateWithYoubi);
            titleHtml = titleHtml.replaceAll("today", unit.date);

            let notesHtml = `<hr>`
                        +`<div id="notes-today" class="unitary-text mb-5">`;
            
            unit.notes.forEach((note) => {
                let noteHtml = `・<a class="note-title" href="{{ path('edit_unitary_with_compact', { id: 'note_id' }) }}">`
                            +`  note_title`
                            +`</a>`
                            +`<br/>`;
                noteHtml = noteHtml.replaceAll("note_id", note.id);
                noteHtml = noteHtml.replaceAll("note_title", note.title);
                notesHtml += noteHtml;
            });
            notesHtml += `</div>`;
            notesHtml = notesHtml.replaceAll("today", unit.date);

            notesBoxEle.innerHTML += titleHtml;
            notesBoxEle.innerHTML += notesHtml;
        });
    }

    async function displayNormalNotes(date) {
        const notesBoxEle = document.getElementById("notes-box");
        const units = await getUnits(date);

        units["units"].forEach((unit) => {
            let titleHtml = `<div class="unitary-date text-center">%%dateWithYoubi%%`
                        +`[<a class="btn btn-link btn-sm" href="{{ path('new_unitary_with_compact', { date: 'today' }) }}">`
                        +`    追加W`
                        +`</a>`
                        +`<a class="btn btn-link btn-sm" href="{{ path('app_unitary_date', { date: 'today' }) }}">`
                        +`    見る`
                        +`</a>`
                        +`]`
                    + `</div>`;
            titleHtml = titleHtml.replaceAll("%%dateWithYoubi%%", unit.dateWithYoubi);
            titleHtml = titleHtml.replaceAll("today", unit.date);

            let notesHtml = ``;
            unit.notes.forEach((note) => {
                let noteHtml = `<hr>`
                            +`<div id="notes-today" class="unitary-title">`
                            +`  <a class="text-dark" href="{{ path('edit_unitary_with_compact', { id: 'note_id' }) }}">`
                            +`      note_title`
                            +`  </a>`
                            +`</div>`
                            +`<div class="unitary-text">note_textHtml</div>`;
                            +`<div class="unitary-footer"></div>`;
                noteHtml = noteHtml.replaceAll("note_id", note.id);
                noteHtml = noteHtml.replaceAll("note_title", note.title);
                noteHtml = noteHtml.replaceAll("note_textHtml", note.textHtml);
                notesHtml += noteHtml;
            });
            notesHtml += `</div>`;
            notesHtml += `<div class="btn-bar text-center mt-3 mb-5"></div>`;
            notesHtml = notesHtml.replaceAll("today", unit.date);

            notesBoxEle.innerHTML += titleHtml;
            notesBoxEle.innerHTML += notesHtml;
        });
    }

    async function onload() {
        const thisDate = document.getElementById("unitary_note_date").value;
        displayNormalNotes(thisDate);
    }
    onload()
    </script>
    <style>
        #notes-box {
            height: 800px;
            overflow: scroll;
        }
        .unitary-date {
            font-size:1.1rem;
            font-weight:bold;
            margin-bottom:20px;
        }
        .unitary-title {
            font-size:0.9rem;
            font-weight:bold;
            margin-bottom:20px;
        }
        .unitary-text {
            overflow-wrap: break-word;
        }
        .unitary-footer {
            margin-bottom:40px;
            text-align:right;
        }
        .note-tags {
            text-decoration: none;
        }
    </style>
{% endblock %}